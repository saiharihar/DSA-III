class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        stack<int>q;
        vector<int>left(n);
        vector<int>right(n);
        for(int i=0;i<n;i++){
            while(!q.empty() &&heights[i]<=heights[q.top()]){
                q.pop();
            }
            left[i]=q.empty()?0:q.top()+1;
            q.push(i);
        }
        while(!q.empty()){
            q.pop();
        }

        for(int i=n-1;i>=0;i--){
            while(!q.empty() &&heights[i]<=heights[q.top()]){
                q.pop();
            }
            right[i]=(q.empty())?n-1:q.top()-1;
            q.push(i);
        }
        int max_area=0;
        for(int i=0;i<n;i++){
            max_area=max(max_area,(right[i]-left[i]+1)*heights[i]);
        }
    return max_area;
    }
};