#include <iostream>
#include <string>
#include <unordered_map>
#include <climits>
using namespace std;

string solve(string s, string t) {
    if (s.empty() || t.empty()) {
        return "";
    }

    unordered_map<char, int> t_freq;
    for (char c : t) {
        t_freq[c]++;
    }

    unordered_map<char, int> w_freq;
    int left = 0, right = 0;
    int min_length = INT_MAX;
    int formed = 0;
    int start = 0;

    while (right < s.size()) {
        char c = s[right];
        w_freq[c]++;

        if (t_freq.count(c) && w_freq[c] == t_freq[c]) {
            formed++;
        }

        while (formed == t_freq.size() && left <= right) {
            if (right - left + 1 < min_length) {
                min_length = right - left + 1;
                start = left;
            }

            char left_char = s[left];
            w_freq[left_char]--;
            if (t_freq.count(left_char) && w_freq[left_char] < t_freq[left_char]) {
                formed--;
            }
            left++;
        }
        right++;
    }

    return min_length == INT_MAX ? "" : s.substr(start, min_length);
}

int main() {
    string s;
    getline(cin, s);
    string t;
    getline(cin, t);
    cout << solve(s, t);
    return 0;
}
